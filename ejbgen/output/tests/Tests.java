// ==================================================================
//
// WARNING : Do not edit this file by hand.  This file was created
// by ejbgen.  Edit the definition files and re-generate to make
// modifications.  Making modifications to this file directly will
// result in loss of work when the file is re-generated.
//
// ==================================================================
//
import junit.framework.*;
import gen.*;

public class Tests extends TestCase {
  public Tests(String name){
    super(name);
  }

  public void test(){
    BookSS lBookSS = null;
    try {
      lBookSS = SSFactory.createBook();
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }
    BookValue sBookValue = null;
    BookValue gBookValue = null;
    AuthorSS lAuthorSS = null;
    try {
      lAuthorSS = SSFactory.createAuthor();
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }
    AuthorValue sAuthorValue = null;
    AuthorValue gAuthorValue = null;
    PublisherSS lPublisherSS = null;
    try {
      lPublisherSS = SSFactory.createPublisher();
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }
    PublisherValue sPublisherValue = null;
    PublisherValue gPublisherValue = null;

    // modify for multi-column primary key
    Integer pk = null;

    sAuthorValue = 
        new AuthorValue();
    sAuthorValue.setAuthorID(Integer.valueOf("100"));
    sAuthorValue.setName(("Conway"));

    try {
      pk = lAuthorSS.add(sAuthorValue);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    try {
      gAuthorValue = lAuthorSS.getAuthorValue(pk);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    assertEquals(gAuthorValue.getAuthorID(), sAuthorValue.getAuthorID());
    assertEquals(gAuthorValue.getName(), sAuthorValue.getName());

    sAuthorValue = 
        new AuthorValue();
    sAuthorValue.setAuthorID(Integer.valueOf("101"));
    sAuthorValue.setName(("Tate"));

    try {
      pk = lAuthorSS.add(sAuthorValue);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    try {
      gAuthorValue = lAuthorSS.getAuthorValue(pk);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    assertEquals(gAuthorValue.getAuthorID(), sAuthorValue.getAuthorID());
    assertEquals(gAuthorValue.getName(), sAuthorValue.getName());

    sPublisherValue = 
        new PublisherValue();
    sPublisherValue.setPublisherID(Integer.valueOf("100"));
    sPublisherValue.setName(("Manning"));

    try {
      pk = lPublisherSS.add(sPublisherValue);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    try {
      gPublisherValue = lPublisherSS.getPublisherValue(pk);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    assertEquals(gPublisherValue.getPublisherID(), sPublisherValue.getPublisherID());
    assertEquals(gPublisherValue.getName(), sPublisherValue.getName());

    sBookValue = 
        new BookValue();
    sBookValue.setBookID(Integer.valueOf("100"));
    sBookValue.setTitle(("Object Oriented Perl"));
    sBookValue.setISBN(("1-884777-79-1"));
    sBookValue.setAuthorID(Integer.valueOf("100"));
    sBookValue.setPublisherID(Integer.valueOf("100"));
    sBookValue.setStatus(Integer.valueOf("3"));
    sBookValue.setNumCopies(Integer.valueOf("1"));

    try {
      pk = lBookSS.add(sBookValue);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    try {
      gBookValue = lBookSS.getBookValue(pk);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    assertEquals(gBookValue.getBookID(), sBookValue.getBookID());
    assertEquals(gBookValue.getTitle(), sBookValue.getTitle());
    assertEquals(gBookValue.getISBN(), sBookValue.getISBN());
    assertEquals(gBookValue.getAuthorID(), sBookValue.getAuthorID());
    assertEquals(gBookValue.getPublisherID(), sBookValue.getPublisherID());
    assertEquals(gBookValue.getStatus(), sBookValue.getStatus());
    assertEquals(gBookValue.getNumCopies(), sBookValue.getNumCopies());

    sBookValue = 
        new BookValue();
    sBookValue.setBookID(Integer.valueOf("101"));
    sBookValue.setTitle(("Bitter Java"));
    sBookValue.setISBN(("1-930110-43-X"));
    sBookValue.setAuthorID(Integer.valueOf("101"));
    sBookValue.setPublisherID(Integer.valueOf("100"));
    sBookValue.setStatus(Integer.valueOf("5"));
    sBookValue.setNumCopies(Integer.valueOf("1"));

    try {
      pk = lBookSS.add(sBookValue);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    try {
      gBookValue = lBookSS.getBookValue(pk);
    } catch (Exception e) {
      fail("ERROR:  " + e.getMessage());
    }

    assertEquals(gBookValue.getBookID(), sBookValue.getBookID());
    assertEquals(gBookValue.getTitle(), sBookValue.getTitle());
    assertEquals(gBookValue.getISBN(), sBookValue.getISBN());
    assertEquals(gBookValue.getAuthorID(), sBookValue.getAuthorID());
    assertEquals(gBookValue.getPublisherID(), sBookValue.getPublisherID());
    assertEquals(gBookValue.getStatus(), sBookValue.getStatus());
    assertEquals(gBookValue.getNumCopies(), sBookValue.getNumCopies());

  }

  public static Test suite(){
    TestSuite suite = new TestSuite("Tests");
    suite.addTestSuite(Tests.class);
    return suite;
  }
}

//
// ==================================================================
//
// WARNING : Do not edit this file by hand.  This file was created
// by ejbgen.  Edit the definition files and re-generate to make
// modifications.  Making modifications to this file directly will
// result in loss of work when the file is re-generated.
//
// ==================================================================
