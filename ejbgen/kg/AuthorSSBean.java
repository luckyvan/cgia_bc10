// ==================================================================
//
// WARNING : Do not edit this file by hand.  This file was created
// by ejbgen.  Edit the definition files and re-generate to make
// modifications.  Making modifications to this file directly will
// result in loss of work when the file is re-generated.
//
// ==================================================================
//
// AuthorSSBean.java

package gen;

import javax.ejb.SessionBean;
import javax.ejb.EJBException;
import java.util.*;
import javax.naming.InitialContext;
import javax.ejb.SessionContext;
import jutil.Database;
import jutil.RowCallback;
import java.sql.ResultSet;
import java.sql.SQLException;
import gen.*;

public class AuthorSSBean implements SessionBean {
  public static AuthorSSHome getHome(){
    try {
      InitialContext jndiContext = new InitialContext();
      Object ref =
        jndiContext.lookup("gen/AuthorSS");
      AuthorSSHome home = (AuthorSSHome)ref;
      return home;
    }catch (Exception e){
      throw new EJBException( "AuthorSSBean.getHome() failed: " + e.getMessage());
    }
  }

  // ===================================================================
  // SQL selects for each value object
  private static String selectAuthorValue = "select Author.authorID, Author.name, Author.penName from Author ";

  // ===================================================================
  // SSB methods
  
  //--------------------------------------------------------------------
  public AuthorValue getAuthorValue(
    Integer authorID
    ) 
  {
    try {
      List params = new LinkedList();
      params.add(authorID);
  
      return 
       (AuthorValue)Database.firstRow(
         Database.runSql(
          selectAuthorValue
           + " where "
           + " Author.authorID = ? "
            ,new RowCallback(){
            public Object process(ResultSet rs) throws SQLException {
              return new AuthorValue(rs);
            }
          }
          , params
       )
      );
    } catch (Exception e) {
      throw new EJBException( "AuthorSSBean.getAuthorValue() failed: " + e.getMessage());
    }
  }
  
  //--------------------------------------------------------------------
  /**
    * returns Collection of AuthorValue
    */
  public java.util.Collection getAllAuthorValue(
    ) 
  {
    try {
  
      return 
         Database.runSql(
          selectAuthorValue
            ,new RowCallback(){
            public Object process(ResultSet rs) throws SQLException {
              return new AuthorValue(rs);
            }
          }
      );
    } catch (Exception e) {
      throw new EJBException( "AuthorSSBean.getAllAuthorValue() failed: " + e.getMessage());
    }
  }
  
  //--------------------------------------------------------------------
  public Integer add(
    AuthorValue value
    ) 
  {
    try {
      AuthorEntityHome entityHome = AuthorEntityBean.getHome(); 
      AuthorEntity entity = entityHome.create(
        value.getAuthorID()
        ,value.getName()
        ,value.getPenName()
      );
      return entity.getAuthorID();
    } catch (Exception e) {
      throw new EJBException( "AuthorSSBean.add() failed: " + e.getMessage());
    }
  }
  
  //--------------------------------------------------------------------
  public void update(
    AuthorValue value
    ) 
  {
    try {
      AuthorEntityHome entityHome = AuthorEntityBean.getHome(); 
      AuthorEntity entity = entityHome.findByPrimaryKey(
        value.getAuthorID());
      entity.setName(value.getName());
      entity.setPenName(value.getPenName());

    } catch (Exception e) {
      throw new EJBException( "AuthorSSBean.update() failed: " + e.getMessage());
    }
  }
  
  //--------------------------------------------------------------------
  public void delete(
    Integer authorID
    ) 
  {
    try {
      AuthorEntityHome entityHome = AuthorEntityBean.getHome(); 
      entityHome.remove(authorID);
    } catch (Exception e) {
      throw new EJBException( "AuthorSSBean.delete() failed: " + e.getMessage());
    }
  }

  public void ejbCreate() {} 
  public void ejbPostCreate() {} 
  public void ejbRemove() {} 
  public void ejbActivate() {} 
  public void ejbPassivate() {} 
  public void setSessionContext(SessionContext sc) {} 
}

//
// ==================================================================
//
// WARNING : Do not edit this file by hand.  This file was created
// by ejbgen.  Edit the definition files and re-generate to make
// modifications.  Making modifications to this file directly will
// result in loss of work when the file is re-generated.
//
// ==================================================================
