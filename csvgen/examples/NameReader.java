// WARNING: This class has been generated by csvgen.  Do not make manual alterations
// to this file.  If you make manual changes they will be lost during the next
// generation cycle.
//
import java.io.*;
import java.util.*;

/**
 * This is the base class for the CSV reader. You should derive your class from this
 * and make any modifications you like.
 */
public class NameReader {

  /**
   * The data structure class
   */
  public class Name
  {

    /**
     * The First Name
     */
    public String first_name;

    /**
     * The Middle Initial
     */
    public String middle_initial;

    /**
     * The Last Name
     */
    public String last_name;

    /**
     * The Age
     */
    public Integer age;

  }

  /**
   * The input stream
   */
  private InputStream _in;

  /**
   * The finished data input.
   */
  private ArrayList _data;

  public NameReader( InputStream in )
  {
    _in = in;
    _data = new ArrayList();
  }

  /**
   * size returns the count of data rows found in the input.
   */
  public int size()
  {
    return _data.size();
  }

  /**
   * Returns the 'Name' object for the specified row.
   */
  public Name get( int index )
  {
    return (Name)_data.get( index );
  }

  /**
   * Reads in the input stream
   */
  public void read()
  {
    StringBuffer line = new StringBuffer();
    line.setLength( 0 );

    try {

      while( true )
      {
        int nChar;

        if ( ( nChar = _in.read() ) == -1 )
          break;

        char cChar = (char)nChar;

        if ( cChar == '\n' )
        {
          process_line( line );
          line.setLength( 0 );
        }
        else
        {
          line.append( cChar );
        }
      }
    }
    catch( IOException except )
    {
      if ( line.length() > 0 )
        process_line( line );
    }
  }

  /**
   * Processes a single input line.
   *
   * @arg line The row text
   */
  protected void process_line( StringBuffer line )
  {
    ArrayList fields = new ArrayList();

    boolean inQuotes = false;
    boolean escaped = false;
    StringBuffer text = new StringBuffer();

    for( int index = 0; index < line.length(); index++ )
    {
      if ( escaped )
      {
        text.append( line.charAt( index ) );
      }
      else
      {
        if ( line.charAt( index ) == '\"' )
        {
          inQuotes = inQuotes ? false : true;
        }
        else if ( line.charAt( index ) == '\\' )
        {
          escaped = true;
        }
        else if ( line.charAt( index ) == ',' && ! inQuotes )
        {
          fields.add( new String( text ) );
          text.setLength( 0 );
        }
        else
        {
          text.append( line.charAt( index ) );
        }
      }
    }

    if ( text.length() > 0 )
      fields.add( new String( text ) );

    String strArray [] = new String[ fields.size() ];
    fields.toArray( strArray );

    process_fields( strArray );
  }

  /**
   * This is the main processor for a single row of string fields
   *
   * @arg fields The array of strings that make up the row.
   */
  protected void process_fields( String fields[] )
  {
    Name data = newRecord();


    data.first_name = process_first_name( fields[ 0 ] );

    data.middle_initial = process_middle_initial( fields[ 1 ] );

    data.last_name = process_last_name( fields[ 2 ] );

    data.age = process_age( fields[ 3 ] );


    addRecord( data );
  }

  /**
   * Creates a new record
   */
  protected Name newRecord( ) { return new Name(); }


  /**
   * Processes the First Name
   *
   * @arg first_name The First Name
   */
  protected String process_first_name( String first_name ) {
    return first_name;
  }

  /**
   * Processes the Middle Initial
   *
   * @arg middle_initial The Middle Initial
   */
  protected String process_middle_initial( String middle_initial ) {
    return middle_initial;
  }

  /**
   * Processes the Last Name
   *
   * @arg last_name The Last Name
   */
  protected String process_last_name( String last_name ) {
    return last_name;
  }

  /**
   * Processes the Age
   *
   * @arg age The Age
   */
  protected Integer process_age( String age ) {
    return Integer.getInteger( age );
  }


  /**
   * Adds a record to the data collection
   *
   * @arg data The new record
   */
  protected void addRecord( Name data ) { _data.add( data ); }
}
//
// WARNING: This class has been generated by csvgen.  Do not make manual alterations
// to this file.  If you make manual changes they will be lost during the next
// generation cycle.
